@0
00000000001000100001100000100000  // add $3, $1, $2  ($3 = $1 + $2 = 2 + 4 = 6)
@4
00100000001001000000000000000101  // addi $4, $1, 5  ($4 = $1 + 5 = 2 + 5 = 7)
@8
00000000011001010011000000100010  // sub $6, $3, $5  ($6 = $3 - $5 = 6 - 10 = -4)
@12
00000000001000100011100000100100  // and $7, $1, $2  ($7 = $1 & $2 = 2 & 4 = 0)
@16
00110000001010000000000000000011  // andi $8, $1, 3  ($8 = $1 & 3 = 2 & 3 = 2)
@20
00000000001000100100000000100101  // or $8, $1, $2   ($8 = $1 | $2 = 2 | 4 = 6)
@24
00110100001010010000000000000100  // ori $9, $1, 4   ($9 = $1 | 4 = 2 | 4 = 6)
@28
00000000001000100101000000101010  // slt $10, $1, $2 ($10 = $1 < $2 = 1)
@32
10001100001010110000000000000100  // lw $11, 4($1)   (Bellekten $11'e veri yüklenir)
@36
10101100001010110000000000001000  // sw $11, 8($1)   ($11'in içeriği belleğe yazılır)
@40
00010000001000110000000000000001  // beq $1, $3, 1   (Eğer $1 == $3 ise, PC = PC + 4 * 1)
@44
00010100001000100000000000000001  // bne $1, $2, 1   (Eğer $1 != $2 ise, PC = PC + 4 * 1)
@48
00001000000000000000000000000010  // j 8             (PC = 8)
